<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-08T08:41:02Z" name="Default suite" finished-at="2023-01-08T08:41:12Z" duration-ms="9412">
    <groups>
    </groups>
    <test started-at="2023-01-08T08:41:02Z" name="Default test" finished-at="2023-01-08T08:41:12Z" duration-ms="9412">
      <class name="com.executable.Executeclass">
        <test-method signature="login()[pri:1, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:02Z" name="login" finished-at="2023-01-08T08:41:07Z" duration-ms="4268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="getStateList()[pri:2, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:07Z" name="getStateList" finished-at="2023-01-08T08:41:08Z" duration-ms="946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStateList -->
        <test-method signature="getCityList()[pri:3, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:08Z" name="getCityList" finished-at="2023-01-08T08:41:09Z" duration-ms="1244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCityList -->
        <test-method signature="addUserAdderss()[pri:4, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:09Z" name="addUserAdderss" finished-at="2023-01-08T08:41:10Z" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addUserAdderss -->
        <test-method signature="updateAddress()[pri:5, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:10Z" name="updateAddress" finished-at="2023-01-08T08:41:11Z" duration-ms="959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAddress -->
        <test-method signature="getUserAddress()[pri:6, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:11Z" name="getUserAddress" finished-at="2023-01-08T08:41:12Z" duration-ms="959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserAddress -->
        <test-method signature="deleteUserAddress()[pri:7, instance:com.executable.Executeclass@2dfaea86]" started-at="2023-01-08T08:41:12Z" name="deleteUserAddress" finished-at="2023-01-08T08:41:12Z" duration-ms="150" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/html; charset=WINDOWS-1252'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/html; charset=WINDOWS-1252'.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:95)
at io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:229)
at io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)
at com.executable.Executeclass.deleteUserAddress(Executeclass.java:248)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUserAddress -->
      </class> <!-- com.executable.Executeclass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
